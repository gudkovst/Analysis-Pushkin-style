file: model4.keras

arch: model = models.Sequential()
      model.add(Dense(16, activation='relu', input_shape=(k,)))
      model.add(Dense(12, activation='silu'))
      model.add(Dense(8, activation='silu'))
      model.add(Dense(4, activation='silu'))
      model.add(Dense(1, activation='sigmoid'))
      model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])

epochs: 225

fs:   TextFeature("homogeneity", "mean_key", args=(100,)), 
      TextFeature("rank", "mean_key"),
      TextFeature("count_puncts_in_sentence", "mean_key", args=(25,)),
      TextFeature("count_words_in_sentence", "mean_key", args=(75,)),
      TextFeature("words", "select_keys_proportion", args=("я", "что")),
      TextFeature("parts", "select_keys_proportion", args=("ADJ", "PRON", "PART")), 
      TextFeature("rels", "select_keys_proportion", args=("conj", "advmod", "amod", "case", "obl", "obj", "nmod")),
      TextFeature("n_grams_all_symb", "select_keys_proportion", args=("ой ",)),
      TextFeature("n_grams_letter", "select_keys_proportion", args=("ный", "ста", "его", "что"))

classes: 0 - 1829-1836; 1 - 1813-1828

data: train_part=0.8, val_part=0.1, not_null_bord=11

data_file: data4

shap: 

auc roc: 0.7956611570247935

threshold 0.0: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.05: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.1: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.15: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.2: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.25: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.3: acc = 0.7142857142857143, precision = 0.7142857142857143, recall = 1.0, f1 = 0.8333333333333333, fpr = 1.0
threshold 0.35: acc = 0.7402597402597403, precision = 0.7333333333333333, recall = 1.0, f1 = 0.846153846153846, fpr = 0.9090909090909091
threshold 0.4: acc = 0.7792207792207793, precision = 0.7638888888888888, recall = 1.0, f1 = 0.8661417322834646, fpr = 0.7727272727272727
threshold 0.45: acc = 0.7857142857142857, precision = 0.7769784172661871, recall = 0.9818181818181818, f1 = 0.8674698795180722, fpr = 0.7045454545454546
threshold 0.5: acc = 0.7987012987012987, precision = 0.8062015503875969, recall = 0.9454545454545454, f1 = 0.8702928870292886, fpr = 0.5681818181818182
threshold 0.55: acc = 0.8116883116883117, precision = 0.8292682926829268, recall = 0.9272727272727272, f1 = 0.8755364806866953, fpr = 0.4772727272727273
threshold 0.6: acc = 0.8051948051948052, precision = 0.8448275862068966, recall = 0.8909090909090909, f1 = 0.8672566371681416, fpr = 0.4090909090909091
threshold 0.65: acc = 0.8181818181818182, precision = 0.8796296296296297, recall = 0.8636363636363636, f1 = 0.8715596330275229, fpr = 0.29545454545454547
threshold 0.7: acc = 0.7792207792207793, precision = 0.88, recall = 0.8, f1 = 0.8380952380952381, fpr = 0.2727272727272727
threshold 0.75: acc = 0.7142857142857143, precision = 0.9024390243902439, recall = 0.6727272727272727, f1 = 0.7708333333333333, fpr = 0.18181818181818182
threshold 0.8: acc = 0.6493506493506493, precision = 0.8888888888888888, recall = 0.5818181818181818, f1 = 0.7032967032967034, fpr = 0.18181818181818182
threshold 0.85: acc = 0.5, precision = 0.8666666666666667, recall = 0.35454545454545455, f1 = 0.503225806451613, fpr = 0.13636363636363635
threshold 0.9: acc = 0.37662337662337664, precision = 0.7916666666666666, recall = 0.17272727272727273, f1 = 0.28358208955223885, fpr = 0.11363636363636363
threshold 0.95: acc = 0.3051948051948052, precision = 0.8, recall = 0.03636363636363636, f1 = 0.06956521739130435, fpr = 0.022727272727272728
